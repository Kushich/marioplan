{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","isLoaded","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b2aec4ab.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\n\r\n\r\nconst SignedInLinks = (props) => \r\n{\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/marioplan/create'>New Project</NavLink></li>\r\n        <li><NavLink to='/marioplan/' onClick={props.signOut}>Log Out</NavLink></li>\r\n        <li><NavLink to='/marioplan/' className='btn btn-floating pink lighten-1'>\r\n          {props.profile.initials}\r\n          </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n  const firebase = getFirebase()\r\n  firebase.auth().signInWithEmailAndPassword(\r\n    credentials.email,\r\n    credentials.password\r\n  ).then(() => {\r\n    dispatch({ type: 'LOGIN_SUCCESS' })\r\n  }).catch((err) => {\r\n    dispatch({type: 'LOGIN_ERROR', err})\r\n  }) \r\n  }\r\n}\r\n\r\n\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n  const firebase = getFirebase()\r\n  firebase.auth().signOut().then(() => {\r\n    dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n  })\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase()\r\n    const firestore = getFirestore()\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password,\r\n    ).then((resp) => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' })\r\n      })\r\n      }).catch(err => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err})\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/marioplan/signup'>Signup</NavLink></li>\r\n        <li><NavLink to='/marioplan/signin'>Login</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/marioplan/' className=\"brand-logo\">MarioPlan</Link>\r\n        {auth.isLoaded && (auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />)}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = ({notifications}) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications && notifications.map(item => {\r\n              return (\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{item.user} </span>\r\n                  <span>{item.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={`/marioplan/project/${project.id}`} key={project.id}>\r\n            <ProjectSummary project={project}/>\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props\r\n    if(!auth.uid) return <Redirect to='/marioplan/signin' />\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects}/>\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  console.log(state)\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n \r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n  ])\r\n)(Dashboard)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props\r\n  if(!auth.uid) return <Redirect to='/marioplan/signin' />\r\n  if (project) {\r\n    return (\r\n    <div>\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title} </span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {`${project.authorFirstName} ${project.authorLastName}`} </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  } else {\r\n  return (\r\n    <div className=\"container center\">\r\n      <p>Loading project...</p>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects'}\r\n  ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n  email: '',\r\n  password: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n    [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.signIn(this.state)\r\n  }\r\n\r\n  render() {\r\n    const { authError, auth } = this.props\r\n    if(auth.uid) return <Redirect to='/marioplan/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"imput-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null }\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n  email: '',\r\n  password: '',\r\n  firstName: '',\r\n  lastName: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n    [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.signUp(this.state)\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props\r\n    console.log(authError)\r\n    if(auth.uid) return <Redirect to='/marioplan/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n          </div>\r\n          \r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"imput-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null }\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n  title: '',\r\n  content: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n    [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.createProject(this.state)\r\n    this.props.history.push('/marioplan/')\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props\r\n    if(!auth.uid) return <Redirect to='/marioplan/signin' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n          </div>\r\n\r\n          <div className=\"imput-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirestore, getFirebase }) => {\r\n    // async call to db\r\n    const firestore = getFirestore()\r\n    const profile = getState().firebase.profile\r\n    const authorId = getState().firebase.auth.uid\r\n    firestore.collection('projects').add({\r\n      ...project, \r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT', project })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n    })\r\n    //\r\n    \r\n  }\r\n}","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/marioplan/' component={Dashboard} />\n          <Route path='/marioplan/project/:id' component={ProjectDetails} />\n          <Route path='/marioplan/signin' component={SignIn} />\n          <Route path='/marioplan/signup' component={SignUp} />\n          <Route path='/marioplan/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error')\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success')\r\n      return state\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      console.log(action)\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n  projects: [\r\n    {id: '1', title: 'project 1', content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quae, soluta!'},\r\n    {id: '2', title: 'project 2', content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quae, soluta!'},\r\n    {id: '3', title: 'project 3', content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quae, soluta!'}\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project ', action.project)\r\n      return state\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.err)\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n \r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBFObIWrsA0xXpCiL45l1Pv2P5vzBFGSVQ\",\r\n  authDomain: \"marioplan-4c00b.firebaseapp.com\",\r\n  databaseURL: \"https://marioplan-4c00b.firebaseio.com\",\r\n  projectId: \"marioplan-4c00b\",\r\n  storageBucket: \"marioplan-4c00b.appspot.com\",\r\n  messagingSenderId: \"630731600629\",\r\n  appId: \"1:630731600629:web:3d51cbe1517d7baa914bbc\"\r\n}\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport default firebase","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig),\n  )\n)\n\nconst rrfConfig = {\n  useFirestoreForProfile: true,\n  userProfile: 'users',\n  attachAuthIsReady: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>, \n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}